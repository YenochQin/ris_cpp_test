!***********************************************************************
!                                                                      *
      subroutine PRSRCN(RECORD, NCORE, IOCCS, IERR)
!                                                                      *
!   READs and parses a string that specifies a configuration.          *
!                                                                      *
!   Written by Farid A Parpia              Last revised: 16 Oct 1992   *
!   Modified by G. Gaigalas,                                May 2011   *
!                                                                      *
!***********************************************************************
!...Translated by Pacific-Sierra Research 77to90  4.3E  10:50:15   2/14/04
!...Modified by Charlotte Froese Fischer
!                     Gediminas Gaigalas  10/05/17
!-----------------------------------------------
!   M o d u l e s
!-----------------------------------------------
      use parameter_def, ONLY: NNNW
      use ORB_C
      IMPLICIT NONE
!-----------------------------------------------
!   D u m m y   A r g u m e n t s
!-----------------------------------------------
      integer, intent(in)           :: NCORE
      integer, intent(out)          :: IERR
      character(LEN=256), intent(in) :: RECORD
      integer, dimension(NNNW), intent(out) :: IOCCS
!-----------------------------------------------
!   L o c a l   V a r i a b l e s
!-----------------------------------------------
      integer :: I,ISTART,IEND,LENTH,IOS,NPI,J,ISHELL,IOSTRT,IOEND, &
         IOCCI,NKJI
      character(LEN=2) :: SYMI
      character(LEN=5) :: FORM
      character(LEN=1), dimension(3) :: CNUM = (/'1', '2', '3'/)
      character :: RECI
!-----------------------------------------------
!
!   Initialise IOCCS for the peel subshells
!
      IOCCS(NCORE+1:NW) = 0
!
!   Parse RECORD from left to right
!
      ISTART = 0
      I = 1
    2 CONTINUE
      RECI = RECORD(I:I)
      if (RECI == '(') then
         IEND = I - 1
    3    CONTINUE
         RECI = RECORD(IEND:IEND)
         if (RECI == ' ') then
            IEND = IEND - 1
            GO TO 3
         else if (RECI == '-') then
            READ (RECORD(IEND-1:IEND), '(1A2)') SYMI
            IEND = IEND - 2
         else
            SYMI(2:2) = ' '
            READ (RECI, '(1A1)') SYMI(1:1)
            IEND = IEND - 1
         endif
         LENTH = IEND - ISTART + 1
         FORM = '(1I'//CNUM(LENTH)//')'
         READ (RECORD(ISTART:IEND), FMT=FORM, IOSTAT=IOS) NPI
         if (IOS /= 0) then
            WRITE (6, *) 'PRSRCN: Principal quantum number ', RECORD(ISTART:&
               IEND)
            WRITE (6, *) ' could not be decoded.'
            IERR = 1
            GO TO 6
         endif
         DO J = NCORE + 1, NW
            if (NP(J)/=NPI .OR. NH(J)/=SYMI) CYCLE
            ISHELL = J
            GO TO 5
         END DO
         WRITE (6, *) 'PRSRCL: Not a peel subshell.'
         IERR = 2
         GO TO 6
    5    CONTINUE
         IOSTRT = I + 1
      else if (RECI == ')') then
         IOEND = I - 1
         LENTH = IOEND - IOSTRT + 1
         FORM = '(1I'//CNUM(LENTH)//')'
         READ (RECORD(IOSTRT:IOEND), FMT=FORM, IOSTAT=IOS) IOCCI
         if (IOS /= 0) then
            WRITE (6, *) 'PRSRCN: Occupation number ', RECORD(IOSTRT:IOEND)
            WRITE (6, *) ' could not be decoded.'
            IERR = 3
            GO TO 6
         endif
         NKJI = NKJ(ISHELL)
         if (NKJI <= 7) then
            if (IOCCI<0 .OR. IOCCI>NKJ(ISHELL)+1) then
               WRITE (6, *) 'PRSRCN: Occupation specified'
               WRITE (6, *) ' incorrectly for ', NP(ISHELL), NH(ISHELL)
               WRITE (6, *) ' subshell.'
               IERR = 4
               GO TO 6
            endif
         else
            if (IOCCI<0 .OR. IOCCI>2) then
               WRITE (6, *) 'PRSRCN: Occupation specified'
               WRITE (6, *) ' incorrectly for ', NP(ISHELL), NH(ISHELL)
               WRITE (6, *) ' subshell.'
               IERR = 5
               GO TO 6
            endif
         endif
         IOCCS(ISHELL) = IOCCI
         ISTART = 0
      else
         if (ISTART == 0) ISTART = I
      endif
!
      if (I < 256) then
         I = I + 1
         GO TO 2
      endif
!
      IERR = 0
!
    6 CONTINUE
      return
      end subroutine PRSRCN
