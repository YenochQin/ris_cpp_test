!*******************************************************************
!                                                                  *
      subroutine EL1(JJA,JJB,JA,JB,IIRE,ICOLBREI)
!                                                                  *
!   --------------  SECTION METWO    SUBPROGRAM 03  -------------  *
!                                                                  *
!     THIS PACKAGE DETERMINES THE VALUES OF MATRIX ELEMENTS        *
!     OF TWO PARTICLE OPERATOR IN CASE :           N'1 = N1        *
!                                                  N'2 = N2        *
!                                                                  *
!      subroutine CALLED: COULOM,GG1122,ITREXG,IXJTIK,PERKO2,      *
!                         RECO,RECO2,SIXJ,SPEAK,WW1                *
!                                                                  *
!   Written by  G. Gaigalas                                        *
!   Transform to fortran 90/95 by G. Gaigalas       December 2012  *
!   The last modification made by G. Gaigalas       October  2020  *
!                                                                  *
!*******************************************************************
!
!-----------------------------------------------
!   M o d u l e s
!-----------------------------------------------
      use iso_fortran_env, only: real64, int32, int64, real128
      use CONS_C,          ONLY: ZERO, HALF, EPS
      use m_C,             ONLY: JLIST, NPEEL
      use orb_C,           ONLY: NAK
      use trk_C
!-----------------------------------------------
!   I n t e r f a c e   B l o c k s
!-----------------------------------------------
      use reco_I
      use reco2_I
      use perko2_I
      use itrig_I
      use itrexg_I
      use ixjtik_I
      use snrc_I
      use speak_I
      use coulom_I
      use ww1_I
      use sixj_I
      use cxk_I
      use talk_I
      use gg1122_I
      IMPLICIT NONE
!-----------------------------------------------
!   D u m m y   A r g u m e n t s
!-----------------------------------------------
      integer, intent(in) :: JJA,JJB,JA,JB,IIRE,ICOLBREI
!      dimension CONE(7,20),S(12),IS(4),KAPS(4),KS(4)
!      dimension PMGG(30),RAGG(30),J(2)
!-----------------------------------------------
!   L o c a l   V a r i a b l e s
!-----------------------------------------------
      integer :: II,IA,IB,IAT,IP1,IP2,IP3,IG1,IG2,IG3,IKK,I1,I2,I3,I4,&
                 ifAZ,J12,IBRD,IBRE,KRA,KRA1,L1,L2,MU,N,NU,ND1,ND2,   &
                 NE1,NE2,NUP1
      integer, dimension(2) :: J
      integer, dimension(4) :: IS,KAPS,KS
      real(kind=real64)          :: QM1,QM2,QM3,QM4,AA,AB,A1,BB,SI,RECC,RAG
      real(kind=real64), dimension(12)   :: S
      real(kind=real64), dimension(30)   :: PMGG,RAGG
      real(kind=real64), dimension(7,20) :: CONE
!-----------------------------------------------
      if(JA /= JB)GO TO 9
!
!     THE CASE 1111   + + - -
!
      if(IIRE /= 0) then
        CALL RECO(JA,JA,JA,JA,0,IAT)
        if(IAT == 0)return
      END if
      CALL PERKO2(JA,JA,JA,JA,1)
      QM1=HALF
      QM2=HALF
      QM3=-HALF
      QM4=-HALF
      IA=JLIST(JA)
      J(1)=ID1(3)
      IP2=ITREXG(J(1),J(1),J(1),J(1),IKK)+1
      if(IKK <= 0) return
      IG2=IP2+IKK-1
      L1=(J(1)+1)/2
      IP1=IP2
      IG1=IG2
      if (ICOLBREI == 2) then
        IS(1)=IA
        IS(2)=IA
        IS(3)=IA
        IS(4)=IA
        KAPS(1)=2*NAK(IS(1))
        KAPS(2)=2*NAK(IS(2))
        KAPS(3)=2*NAK(IS(3))
        KAPS(4)=2*NAK(IS(4))
        KS(1)=IABS(KAPS(1))
        KS(2)=IABS(KAPS(2))
        KS(3)=IABS(KAPS(3))
        KS(4)=IABS(KAPS(4))
        CALL SNRC(IS,KAPS,KS,ND1,ND2,NE1,NE2,IBRD,IBRE)
        if(IBRD <= 0)return
      END if
      DO I2=IP1,IG1,2
        KRA=(I2-1)/2
        if (ICOLBREI == 1) then
          CALL COULOM(L1,L1,L1,L1,ID1(5),ID1(5),ID1(5),ID1(5),KRA,A1)
          if(DABS(A1) < EPS)CYCLE
          A1=-A1*HALF
        END if
        AB=ZERO
        DO I3=IP2,IG2,2
          J12=(I3-1)/2
          if(IXJTIK(J(1),J(1),KRA*2,J(1),J(1),J12*2) == 0)CYCLE
          CALL WW1(IK1,BK1,ID1,BD1,J12,QM1,QM2,QM3,QM4,AA)
          if(DABS(AA) < EPS)CYCLE
          CALL SIXJ(J(1),J(1),KRA*2,J(1),J(1),J12*2,0,SI)
          AA=AA*SI*DSQRT(DBLE(I3))
          ifAZ=IK1(3)+J12+KRA
          if((ifAZ/2)*2 /= ifAZ)AA=-AA
          AB=AB+AA
        END DO
!
!     RECOUPLING COEFFICIENTS
!
        if (ICOLBREI == 1) then
          BB=AB*A1
          BB=BB/DSQRT(DBLE(IK1(6)+1))
          if(DABS(BB) > EPS)CALL SPEAK(JJA,JJB,IA,IA,IA,IA,KRA,BB)
        else if (ICOLBREI == 2) then
          N=(KRA-ND1)/2+1
          if(((KRA-ND1)/2)*2 == (KRA-ND1)) then
            CALL CXK(S,IS,KAPS,KRA,KRA,3,1)
            if(DABS(S(1)) > EPS) then
              BB =-HALF*S(1)*AB/DSQRT(DBLE(IK1(6)+1))
              if(DABS(BB) > EPS)CALL TALK(JJA,JJB,KRA,IA,IA,IA,IA,4,BB)
            END if
          END if
        END if
      END DO
      return
!  ............................................................
    9 if(NPEEL <= 1)return
      if(IIRE /= 0) then
        CALL RECO(JA,JB,JB,JB,1,IAT)
        if(IAT == 0)return
      END if
      IA=JLIST(JA)
      IB=JLIST(JB)
      QM1=HALF
      QM2=-HALF
      QM3=HALF
      QM4=-HALF
      CALL PERKO2(JA,JB,JA,JA,2)
      J(1)=ID1(3)
      J(2)=ID2(3)
      L1=(J(1)+1)/2
      L2=(J(2)+1)/2
      IP1=ITREXG(J(1),J(1),J(2),J(2),IKK)+1
      if(IKK <= 0)return
      IG1=IP1+IKK-1
      IP3=IP1
      IG3=IG1
      DO I4=IP1,IG1,2
        KRA=(I4-1)/2
        KRA1=KRA+1
        if(KRA1 > 30)GO TO 10
        RAGG(KRA1)=ZERO
        PMGG(KRA1)=ZERO
        CALL RECO2(JA,JB,KRA*2,0,IAT,RECC)
        if(IAT == 0) CYCLE
        CALL GG1122(KRA,KRA,QM1,QM2,QM3,QM4,RAG)
        if(DABS(RAG) < EPS) CYCLE
        RAGG(KRA1)=RAG
        CALL RECO2(JA,JB,KRA*2,1,IAT,RECC)
        PMGG(KRA1)=RECC
      END DO
! * * *                      * * *                      * * *
!     CASES 1212   + + - -        TRANSFORM TO  1122   + - + -
!           2121                                1122
!
      if (ICOLBREI == 2) then
        IS(1)=IA
        IS(2)=IB
        IS(3)=IA
        IS(4)=IB
        KAPS(1)=2*NAK(IS(1))
        KAPS(2)=2*NAK(IS(2))
        KAPS(3)=2*NAK(IS(3))
        KAPS(4)=2*NAK(IS(4))
        KS(1)=IABS(KAPS(1))
        KS(2)=IABS(KAPS(2))
        KS(3)=IABS(KAPS(3))
        KS(4)=IABS(KAPS(4))
        CALL SNRC(IS,KAPS,KS,ND1,ND2,NE1,NE2,IBRD,IBRE)
        DO II=1,20
           CONE(1,II)=ZERO
           CONE(2,II)=ZERO
           CONE(3,II)=ZERO
           CONE(4,II)=ZERO
           CONE(5,II)=ZERO
           CONE(6,II)=ZERO
           CONE(7,II)=ZERO
        END DO
        if(IBRD == 0 .AND. IBRE == 0)return
      END if
      DO I1=IP1,IG1,2
        KRA=(I1-1)/2
        KRA1=KRA+1
        if(KRA1 > 30)GO TO 10
        if (ICOLBREI == 1) then
          CALL COULOM(L1,L2,L1,L2,ID1(5),ID2(5),ID1(5),ID2(5),KRA,AA)
          if(DABS(AA) < EPS) CYCLE
          AA=AA*PMGG(KRA1)
          if(DABS(AA) < EPS) CYCLE
          AA=AA*RAGG(KRA1)
          if(DABS(AA) < EPS) CYCLE
          AA=AA/DSQRT(DBLE(I1))
          if(DABS(AA) > EPS) CALL SPEAK(JJA,JJB,IA,IB,IA,IB,KRA,AA)
        else if (ICOLBREI == 2) then
          N=(KRA-ND1)/2+1
          if(((KRA-ND1)/2)*2 == (KRA-ND1)) then
            CALL CXK(S,IS,KAPS,KRA,KRA,3,1)
            if(DABS(S(1)) > EPS) then
              BB=S(1)*PMGG(KRA1)*RAGG(KRA1)/DSQRT(DBLE(I1))
              if(DABS(BB) > EPS)CALL TALK(JJA,JJB,KRA,IA,IA,IB,IB,4,BB)
            END if
          END if
        END if
      END DO
! * * *                      * * *                      * * *
!     CASES 1221   + + - -        TRANSFORM TO  1122   + - + -
!           2112                                1122
!
      IP2=ITREXG(J(1),J(2),J(1),J(2),IKK)+1
      if(IKK <= 0) return
      IG2=IP2+IKK-1
      DO I2=IP2,IG2,2
        KRA=(I2-1)/2
        if(KRA > 30)GO TO 10
        if (ICOLBREI == 1) then
          CALL COULOM(L1,L2,L2,L1,ID1(5),ID2(5),ID2(5),ID1(5),KRA,A1)
          if(DABS(A1) < EPS) CYCLE
        END if
        AB=ZERO
        DO I3=IP3,IG3,2
          J12=(I3-1)/2
          KRA1=J12+1
          if(KRA1 > 30)GO TO 10
          AA=PMGG(KRA1)
          if(DABS(AA) < EPS) CYCLE
          AA=AA*RAGG(KRA1)
          if(DABS(AA) < EPS) CYCLE
          if(IXJTIK(J(1),J(2),KRA*2,J(2),J(1),J12*2) == 0)CYCLE
          CALL SIXJ(J(1),J(2),KRA*2,J(2),J(1),J12*2,0,SI)
          AA=AA*SI*DSQRT(DBLE(I3))
          AB=AB+AA
        END DO
        if (ICOLBREI == 1) then
          BB=A1*AB
          if(DABS(BB) > EPS)CALL SPEAK(JJA,JJB,IA,IB,IB,IA,KRA,BB)
        else if (ICOLBREI == 2) then
          NU=KRA
          if(((NU-NE1)/2)*2 == (NU-NE1)) then
            if((ITRIG(KS(1),KS(4),NU+NU+1) /= 0) .AND.  &
               (ITRIG(KS(2),KS(3),NU+NU+1) /= 0)) then
              if(NU > 0) then
                N=(NU-NE1)/2+1
                CALL CXK(S,IS,KAPS,NU,KRA,4,2)
                DO MU = 1,3
                  CONE(MU,N)=CONE(MU,N)+AB*S(MU)
                END DO
              END if
            END if
          END if
          NU=KRA+1
          if(((NU-NE1)/2)*2 == (NU-NE1)) then
            if((ITRIG(KS(1),KS(4),NU+NU-1) /= 0) .AND.  &
               (ITRIG(KS(2),KS(3),NU+NU-1) /= 0)) then
              if(NU >= 0) then
                N=(NU-NE1)/2+1
                if(N <= NE2) then
                  CALL CXK(S,IS,KAPS,NU,KRA,4,2)
                  DO MU = 1,3
                    CONE(MU,N)=CONE(MU,N)+AB*S(MU)
                  END DO
                END if
              END if
            END if
          END if
          NU=KRA-1
          if(((NU-NE1)/2)*2 == (NU-NE1)) then
            if((ITRIG(KS(1),KS(4),NU+NU+3) /= 0) .AND.  &
               (ITRIG(KS(2),KS(3),NU+NU+3) /= 0)) then
              if(NU >= 0) then
                N=(NU-NE1)/2+1
                if(N < NE2) then
                  CALL CXK(S,IS,KAPS,NU,KRA,4,2)
                  DO MU = 1,7
                    CONE(MU,N)=CONE(MU,N)+AB*S(MU)
                  END DO
                END if
              END if
            END if
          END if
        END if
      END DO
      if (ICOLBREI == 2) then
        DO N = 1,NE2
           NU=NE1+2*(N-1)
           CALL TALK(JJA,JJB,NU,IB,IA,IB,IA,5,CONE(1,N))
           CALL TALK(JJA,JJB,NU,IA,IB,IB,IA,5,CONE(2,N))
           CALL TALK(JJA,JJB,NU,IA,IB,IA,IB,5,CONE(3,N))
           if(N == NE2) CYCLE
           NUP1=NU+1
           CALL TALK(JJA,JJB,NUP1,IA,IB,IA,IB,6,CONE(4,N))
           CALL TALK(JJA,JJB,NUP1,IB,IA,IB,IA,6,CONE(5,N))
           CALL TALK(JJA,JJB,NUP1,IA,IB,IB,IA,6,CONE(6,N))
           CALL TALK(JJA,JJB,NUP1,IB,IA,IA,IB,6,CONE(7,N))
        END DO
      END if
      return
   10 WRITE(99,100)
  100 FORMAT(5X,'ERRO IN EL1  PMGG RAGG')
      STOP
      end subroutine EL1
