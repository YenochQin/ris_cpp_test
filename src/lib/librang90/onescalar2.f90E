!*******************************************************************
!                                                                  *
      subroutine ONESCALAR2(JJA,JJB,JA,JB,COEFF)
!                                                                  *
!   --------------  SECTION METWO    SUBPROGRAM 06  -------------  *
!                                                                  *
!     THIS PACKAGE EVALUATED THE CASES - 2111, 1211 ( + + - - ),   *
!     WHICH APPEARS IN CALCULATION MATRIX ELEMENTS BETWEEN         *
!     CONFIGURATIONS:                               N'1 = N1 - 1   *
!                                                   N'2 = N2 + 1   *
!                                                                  *
!     subroutine CALLED: COULOM,GG1222,ITREXG,IXJTIK,PERKO2,       *
!                        RECO,RECO2,SIXJ,SPEAK                     *
!                                                                  *
!   Written by  G. Gaigalas                                        *
!   Transform to fortran 90/95 by G. Gaigalas       December 2012  *
!   The last modification made by G. Gaigalas       October  2017  *
!                                                                  *
!*******************************************************************
!
!-----------------------------------------------
!   M o d u l e s
!-----------------------------------------------
      use iso_fortran_env, only: real64, int32, int64, real128
      use CONS_C,          ONLY: ZERO, HALF, EPS
      use m_C
      use trk_C
!-----------------------------------------------
!   I n t e r f a c e   B l o c k s
!-----------------------------------------------
      use recoonescalar_I
      use perko2_I
      use reco2_I
      use gg12_I
      IMPLICIT NONE
!-----------------------------------------------
!   D u m m y   A r g u m e n t s
!-----------------------------------------------
      integer, intent(in) :: JJA,JJB,JA,JB
      real(kind=real64), intent(out) :: COEFF
!-----------------------------------------------
!   L o c a l   V a r i a b l e s
!-----------------------------------------------
      integer      :: IAT,JAA,JBB,NN,IB1,II,INN,ifAZ
      real(kind=real64) :: QM1,QM2,REC,WW
!-----------------------------------------------
      COEFF=ZERO
      if(JA == JB) return
      if(JA < JB) then
        JAA=JA
        JBB=JB
      else
        JAA=JB
        JBB=JA
      END if
      CALL RECOONESCALAR(-1,JAA,JBB,JBB,JBB,1,IAT)
      if(IAT == 0)return
      QM1=HALF
      QM2=-HALF
      CALL PERKO2(JA,JB,JA,JA,2)
      if(ID1(3) /= ID2(3)) return
      CALL RECO2(JAA,JBB,ID2(3),0,IAT,REC)
      if(IAT == 0)return
      CALL GG12(IK1,IK2,BK1,BK2,ID1,ID2,BD1,BD2,QM1,QM2,WW)
      if(DABS(WW) > EPS) then
         CALL RECO2(JAA,JBB,ID2(3),1,IAT,REC)
         COEFF=WW*REC*DSQRT(DBLE(ID1(3)+1))
         NN=0
         IB1=JBB-1
         DO II=JAA,IB1
           INN=JLIST(II)
           NN=NQ1(INN)+NN
         END DO
         if((NN/2)*2 == NN) COEFF=-COEFF
!GG         if(JA.GT.JB) COEFF=-COEFF
         COEFF=-COEFF
!
!     TRANSFORM FANO & RACAH PHASE CONVENTION
!     TO CONDON & SHORTLEY PHASE CONVENTION
!
        ifAZ=IK1(5)*IK1(4)+IK2(5)*IK2(4)-ID1(5)*ID1(4)-ID2(5)*ID2(4)
        if((ifAZ/4)*4 /= ifAZ)COEFF=-COEFF
      END if
      return
      end subroutine ONESCALAR2
